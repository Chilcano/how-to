name: spectral-ci

on:
  workflow_dispatch:
    inputs:
      dummyLogLevel:
        description: 'Dummy Log Level'
        required: false
        default: 'warning'
        type: choice
        options: [info, warning, debug] 
  # push:
  #   branches: [main,api]
  #   paths:
  #     - 'src/api_specs/**.yaml'
  #     - '.github/workflows/spectral-ci.yaml'
  # pull_request:
  #   types:
  #     - opened
  #   branches: [main,api]
  #   paths:
  #     - 'src/api_specs/**.yaml'
  #     - '.github/workflows/spectral-ci.yaml'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  spectral-cli:
    name: Spectral CLI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set myvars
        id: myvars
        run: |
        branchname=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )
        dateinsecs=$(date +%s)
        githashshort=$(git rev-parse --short HEAD)
        echo "GIT_HASH_SHORT=$githashshort" >> $GITHUB_OUTPUT
        echo "DATE_IN_SECS=$dateinsecs" >> $GITHUB_OUTPUT
        if [ "$branchname" = "develop" ]; then
          echo "CURRENT_ENVIRONMENT=development" >> $GITHUB_OUTPUT
          echo "SHORT_ENV_OUT=DEV" >> $GITHUB_OUTPUT
        elif [ "$branchname" = "main" ] || [ "$branchname" = "master" ]; then
          echo "CURRENT_ENVIRONMENT=production" >> $GITHUB_OUTPUT
          echo "SHORT_ENV_OUT=PROD" >> $GITHUB_OUTPUT
        else
          branchname='test'
          echo "CURRENT_ENVIRONMENT=testing" >> $GITHUB_OUTPUT
          echo "SHORT_ENV_OUT=TEST" >> $GITHUB_OUTPUT
        fi
        echo "BRANCH_NAME=$branchname" >> $GITHUB_OUTPUT

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Spectral and initial rulesets
        run: |
          npm install @stoplight/spectral-cli
          npm install @stoplight/spectral-owasp-ruleset

      - name: Setup Spectral rulesets
        run: |
          echo 'extends: ["spectral:oas"]' > .spectral_oas.yaml   # ruleset is already installed when the linter was installed
          echo 'extends: ["@stoplight/spectral-owasp-ruleset"]' > .spectral_owasp.yaml    # ruleset had to be installed before with npm install
          echo 'extends: ["https://unpkg.com/@apisyouwonthate/style-guide@1.3.2/dist/ruleset.js"]' > .spectral_style_guide.yaml   # ruleset is downloaded in runtime
          mkdir -p _out/

      - name: Run Spectral (OAS ruleset)
        run: | 
          set -o pipefail
          npx spectral lint src/api_specs/openapi01.yaml -r .spectral_oas.yaml -v | tee _out/spectral_oas.log

      - name: Run Spectral (OWASP ruleset)
        if: ${{ success() }} || ${{ failure() }}
        run: |
          set -o pipefail
          npx spectral lint src/api_specs/openapi01.yaml -r .spectral_owasp.yaml -v | tee _out/spectral_owasp.log

      - name: Run Spectral (OWASP ruleset - junit)
        if: ${{ success() }} || ${{ failure() }}
        run: |
          set -o pipefail
          npx spectral lint src/api_specs/openapi01.yaml -r .spectral_owasp.yaml  -f junit -o _out/spectral_owasp.junit

      - name: Run Spectral (Style-Guide ruleset  downloaded in runtime)
        if: ${{ success() }} || ${{ failure() }}
        run: |
          set -o pipefail
          npx spectral lint src/api_specs/openapi01.yaml -r .spectral_style_guide.yaml -v | tee _out/spectral_style_guide.log
          set +o pipefail

      - name: Archive Spectral reports
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: spectral-reports-${{ steps.myvars.outputs.DATE_IN_SECS }}
          path: _out/*.*

      - name: Publish and embed Spectral Results (OWASP, junit)
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()    
        #if: false        ## false = bypass (don't exec)
        with:
          files: _out/spectral_owasp.junit
          check_name: "OWASP APISec Top10"
          comment_mode: always 
          job_summary: true 
          compare_to_earlier_commit: true
          report_individual_runs: true 
          report_suite_logs: any 

  spectral-action:
    name: Spectral GH Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and setup Spectral Rulesets
        run: |
          echo 'extends: ["spectral:oas", "https://unpkg.com/@stoplight/spectral-owasp-ruleset@1.2.0/dist/ruleset.js"]' > .spectral.yaml

      - name: Run Spectral Action
        uses: stoplightio/spectral-action@latest
        with:
          file_glob: './src/api_specs/**/*.oas*.{json,yml,yaml}'

