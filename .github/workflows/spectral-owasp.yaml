name: spectral-owasp

on:
  workflow_dispatch:
    inputs:
      openapi_spec_file:
        description: 'Select the OpenAPI spec file'
        type: choice
        required: true
        default: 'vocdoni-api.yaml'
        options: 
          - 'vocdoni-api.yaml'
          - 'vocdoni-api-fixed.yaml'
  push:
    branches: [main,api]
    paths:
      - 'src/api_specs/**.yaml'
  pull_request:
    types:
      - opened
    branches: [main,api]
    paths:
      - 'src/api_specs/**.yaml'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  spectral-owasp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set myvars
        id: myvars
        run: |
          branchname=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )
          dateinsecs=$(date +%s)
          githashshort=$(git rev-parse --short HEAD)
          echo "GIT_HASH_SHORT=$githashshort" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$dateinsecs" >> $GITHUB_OUTPUT
          if [ "$branchname" = "develop" ]; then
            echo "CURRENT_ENVIRONMENT=development" >> $GITHUB_OUTPUT
            echo "SHORT_ENV_OUT=DEV" >> $GITHUB_OUTPUT
          elif [ "$branchname" = "main" ] || [ "$branchname" = "master" ]; then
            echo "CURRENT_ENVIRONMENT=production" >> $GITHUB_OUTPUT
            echo "SHORT_ENV_OUT=PROD" >> $GITHUB_OUTPUT
          else
            branchname='test'
            echo "CURRENT_ENVIRONMENT=testing" >> $GITHUB_OUTPUT
            echo "SHORT_ENV_OUT=TEST" >> $GITHUB_OUTPUT
          fi
          echo "BRANCH_NAME=$branchname" >> $GITHUB_OUTPUT
          openapi_spec_file_selected=${{ github.event.inputs.openapi_spec_file }}
          if [ "$openapi_spec_file_selected" == "" ]; then
            openapi_spec_file_selected='none'
          fi
          echo "OPENAPI_SPEC_FILE_SELECTED=$openapi_spec_file_selected" >> $GITHUB_OUTPUT

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Spectral and initial rulesets
        run: |
          npm install @stoplight/spectral-cli
          npm install @stoplight/spectral-owasp-ruleset

      - name: Setup OWASP APISec Spectral rulesets
        run: |
          echo 'extends: ["@stoplight/spectral-owasp-ruleset"]' > .spectral_owasp.yaml
          mkdir -p out/

      - name: Run Spectral (OAS file '${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED }}')
        if: ${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED != 'none' }}
        run: |
          set -o pipefail
          npx spectral lint src/api_specs/${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED }} -r .spectral_owasp.yaml \
          -f junit -o.junit out/spectral_owasp.junit \
          -f json -o.json out/spectral_owasp.json \
          -f html -o.html out/spectral_owasp.html \
          # -f sarif -o.sarif out/spectral_owasp.sarif \
          # -f stylish -o.stylish "<stdout>" \
          -f github-actions -o.github-actions out/spectral_owasp.gha --verbose
          # -f github-actions -o.github-actions "<stdout>" --verbose
          set +o pipefail

      - name: Upload Spectral reports as GH Artifact (OAS file '${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED }}')
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: spectral-reports-${{ steps.myvars.outputs.DATE_IN_SECS }}
          path: out/*.*

      # - name: Publish Spectral Results (OAS file '${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED }}')
      #   uses: EnricoMi/publish-unit-test-result-action@v2
      #   if: always()    ## if false = bypass (dont exec)
      #   with:
      #     files: |
      #       out/spectral_owasp.junit
      #     check_name: 'OWASP report - ${{ steps.myvars.outputs.OPENAPI_SPEC_FILE_SELECTED }}'
      #     comment_mode: always
      #     job_summary: true
      #     compare_to_earlier_commit: true
      #     report_individual_runs: true
      #     report_suite_logs: any
      #     ignore_runs: false
      #     test_file_prefix: '-/home/runner/work/how-tos'

      # - name: Load Sarif Report to Github
      #   uses: github/codeql-action/upload-sarif@v3
      #   if: always()    ## if false = bypass
      #   with:
      #     sarif_file: out/spectral_owasp.sarif
      #     category: spectral-owasp-apisec

      - name: Load GHA Report as Annotations
        if: always()
        run: |
          while read p; do
            echo "$p"
          done < ${{ github.workspace }}/out/spectral_owasp.gha