name: api-security-checks

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug 
  push:
    branches:
      - main
      - api    
    paths:
      - 'src/api_specs/**.yaml'
      - '.github/workflows/**.yaml'
  pull_request:
    types:
      - opened
    branches:
      - main
      - api
    paths:
      - 'src/api_specs/**.yaml'

env:
  APPLY_FIXES: all # When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI tool)
  APPLY_FIXES_EVENT: push # Decide which event triggers application of fixes in a commit or a PR (pull_request, push, all)
  APPLY_FIXES_MODE: commit # If APPLY_FIXES is used, defines if the fixes are directly committed (commit) or posted in a PR (pull_request)

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Setup and run MegaLinter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # If you use VALIDATE_ALL_CODEBASE = true, you can remove this line to improve performances

      - name: Download API specs
        run: |
          curl -s -o vocdoni-api.yaml https://raw.githubusercontent.com/vocdoni/developer-portal/main/swaggers/vocdoni-api.yaml
          mkdir -p src/api_specs/
          mv vocdoni-api.yaml src/api_specs/.

      # pull docker image taked too much time (~2 mins), can it be cached?:
      # https://stackoverflow.com/questions/71180135/github-actions-how-can-i-cache-the-docker-images-for-testcontainers
      - name: Run MegaLinter
        id: ml
        uses: oxsecurity/megalinter@v6
        env:
          VALIDATE_ALL_CODEBASE: true       # false: ML doesn't pick the files inside of src/api_specs/, only "git diff"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_LINTERS: OPENAPI_SPECTRAL
          FILTER_REGEX_INCLUDE: (src/api_specs/)
          #EMAIL_REPORTER_EMAIL: roger@intix.info

      - name: Archive MegaLinter reports
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: Get short commit sha and branch name
        id: vars
        run: |
          echo "git_hash_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch_name=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT

      - name: Echo vars
        run: |
          echo git_hash_short: ${{ steps.vars.outputs.git_hash_short }}
          echo branch_name: ${{ steps.vars.outputs.branch_name }}

      - name: Browse workspace
        run: |
          ls -la src/api_specs/
          ls -la megalinter-reports/
          ls -la

      # # Create pull request if applicable (for now works only on PR from same repository, not from forks)
      # - name: Create GH PR with applied fixes
      #   id: cpr
      #   if: |
      #     steps.ml.outputs.has_updated_sources == 1 && 
      #     (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && 
      #     env.APPLY_FIXES_MODE == 'pull_request' && 
      #     (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && 
      #     !contains(github.event.head_commit.message, 'skip fix')
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
      #     commit-message: "[MegaLinter] Apply linters automatic fixes"
      #     title: "[MegaLinter] Apply linters automatic fixes"
      #     labels: bot

      # - name: Print GH PR output
      #   if: |
      #     steps.ml.outputs.has_updated_sources == 1 && 
      #     (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && 
      #     env.APPLY_FIXES_MODE == 'pull_request' && 
      #     (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && 
      #     !contains(github.event.head_commit.message, 'skip fix')
      #   run: |
      #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      # # Push new commit if applicable (for now works only on PR from same repository, not from forks)
      # - name: Prepare GH commit
      #   if: |
      #     steps.ml.outputs.has_updated_sources == 1 && 
      #     (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && 
      #     env.APPLY_FIXES_MODE == 'commit' && 
      #     github.ref != 'refs/heads/main' && 
      #     (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && 
      #     !contains(github.event.head_commit.message, 'skip fix')
      #   run: sudo chown -Rc $UID .git/

      # - name: Commit and push applied linter fixes
      #   if: |
      #     steps.ml.outputs.has_updated_sources == 1 && 
      #     (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && 
      #     env.APPLY_FIXES_MODE == 'commit' && 
      #     github.ref != 'refs/heads/main' && 
      #     (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && 
      #     !contains(github.event.head_commit.message, 'skip fix')
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
      #     commit_message: "[MegaLinter] Apply linters fixes"